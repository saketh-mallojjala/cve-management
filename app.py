from flask import Flask, request, jsonify
import sqlite3

app = Flask(__name__)
database_path = 'cve_database.db'


def get_db_connection():
    conn = sqlite3.connect(database_path)
    conn.row_factory = sqlite3.Row
    return conn


@app.route('/')
def index():
    return "Welcome to the CVE Management API"


@app.route('/cve/<cve_id>', methods=['GET'])
def get_cve(cve_id):
    conn = get_db_connection()
    cve = conn.execute('SELECT * FROM cve WHERE cve_id = ?', (cve_id,)).fetchone()
    conn.close()
    if cve is None:
        return jsonify({'error': 'CVE not found'}), 404
    return jsonify(dict(cve))


@app.route('/cve/all', methods=['GET'])
def get_all_cves():
    conn = get_db_connection()
    cves = conn.execute('SELECT * FROM cve').fetchall()
    conn.close()
    return jsonify([dict(cve) for cve in cves])


@app.route('/cve/addCVE', methods=['POST'])
def add_cve():
    new_cve = request.get_json()
    conn = get_db_connection()
    try:
        conn.execute('''
            INSERT INTO cve (cve_id, severity, cvss, affected_packages, description, cwe_id)
            VALUES (?, ?, ?, ?, ?, ?)
            ''', (
        new_cve['cve_id'], new_cve['severity'], new_cve['cvss'], new_cve['affected_packages'], new_cve['description'],
        new_cve['cwe_id']))
        conn.commit()
        response = {'message': 'CVE added successfully'}
    except sqlite3.IntegrityError:
        response = {'error': 'CVE ID already exists'}
    conn.close()
    return jsonify(response)


@app.route('/cve/<cve_id>', methods=['DELETE'])
def delete_cve(cve_id):
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute('DELETE FROM cve WHERE cve_id = ?', (cve_id,))
    conn.commit()
    if cursor.rowcount == 0:
        response = {'error': 'CVE not found'}
    else:
        response = {'message': 'CVE deleted successfully'}
    conn.close()
    return jsonify(response)


@app.route('/cve/<cve_id>', methods=['PUT'])
def update_cve(cve_id):
    updated_cve = request.get_json()
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute('''
        UPDATE cve
        SET severity = ?, cvss = ?, affected_packages = ?, description = ?, cwe_id = ?
        WHERE cve_id = ?
        ''', (
    updated_cve['severity'], updated_cve['cvss'], updated_cve['affected_packages'], updated_cve['description'],
    updated_cve['cwe_id'], cve_id))
    conn.commit()
    if cursor.rowcount == 0:
        response = {'error': 'CVE not found'}
    else:
        response = {'message': 'CVE updated successfully'}
    conn.close()
    return jsonify(response)


if __name__ == '__main__':
    app.run(debug=True)
